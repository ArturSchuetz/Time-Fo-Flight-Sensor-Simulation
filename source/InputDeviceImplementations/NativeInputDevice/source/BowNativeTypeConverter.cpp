#include <NativeInputDevice/BowNativeTypeConverter.h>
#include <GLFW/glfw3.h>

namespace bow {

	unsigned int NativeTypeConverter::To(Key key)
	{
		switch (key)
		{
		case Key::K_SPACE:
			return GLFW_KEY_SPACE;
		case Key::K_APOSTROPHE:
			return GLFW_KEY_APOSTROPHE;
		case Key::K_COMMA:
			return GLFW_KEY_COMMA;
		case Key::K_MINUS:
			return GLFW_KEY_MINUS;
		case Key::K_PERIOD:
			return GLFW_KEY_PERIOD;
		case Key::K_SLASH:
			return GLFW_KEY_SLASH;
		case Key::K_0:
			return GLFW_KEY_0;
		case Key::K_1:
			return GLFW_KEY_1;
		case Key::K_2:
			return GLFW_KEY_2;
		case Key::K_3:
			return GLFW_KEY_3;
		case Key::K_4:
			return GLFW_KEY_4;
		case Key::K_5:
			return GLFW_KEY_5;
		case Key::K_6:
			return GLFW_KEY_6;
		case Key::K_7:
			return GLFW_KEY_7;
		case Key::K_8:
			return GLFW_KEY_8;
		case Key::K_9:
			return GLFW_KEY_9;
		case Key::K_SEMICOLON:
			return GLFW_KEY_SEMICOLON;
		case Key::K_EQUAL:
			return GLFW_KEY_EQUAL;
		case Key::K_A:
			return GLFW_KEY_A;
		case Key::K_B:
			return GLFW_KEY_B;
		case Key::K_C:
			return GLFW_KEY_C;
		case Key::K_D:
			return GLFW_KEY_D;
		case Key::K_E:
			return GLFW_KEY_E;
		case Key::K_F:
			return GLFW_KEY_F;
		case Key::K_G:
			return GLFW_KEY_G;
		case Key::K_H:
			return GLFW_KEY_H;
		case Key::K_I:
			return GLFW_KEY_I;
		case Key::K_J:
			return GLFW_KEY_J;
		case Key::K_K:
			return GLFW_KEY_K;
		case Key::K_L:
			return GLFW_KEY_L;
		case Key::K_M:
			return GLFW_KEY_M;
		case Key::K_N:
			return GLFW_KEY_N;
		case Key::K_O:
			return GLFW_KEY_O;
		case Key::K_P:
			return GLFW_KEY_P;
		case Key::K_Q:
			return GLFW_KEY_Q;
		case Key::K_R:
			return GLFW_KEY_R;
		case Key::K_S:
			return GLFW_KEY_S;
		case Key::K_T:
			return GLFW_KEY_T;
		case Key::K_U:
			return GLFW_KEY_U;
		case Key::K_V:
			return GLFW_KEY_V;
		case Key::K_W:
			return GLFW_KEY_W;
		case Key::K_X:
			return GLFW_KEY_X;
		case Key::K_Y:
			return GLFW_KEY_Y;
		case Key::K_Z:
			return GLFW_KEY_Z;
		case Key::K_LEFT_BRACKET:
			return GLFW_KEY_LEFT_BRACKET;
		case Key::K_BACKSLASH:
			return GLFW_KEY_BACKSLASH;
		case Key::K_RIGHT_BRACKET:
			return GLFW_KEY_RIGHT_BRACKET;
		case Key::K_GRAVE_ACCENT:
			return GLFW_KEY_GRAVE_ACCENT;
		case Key::K_WORLD_1:
			return GLFW_KEY_WORLD_1;
		case Key::K_WORLD_2:
			return GLFW_KEY_WORLD_2;
		case Key::K_ESCAPE:
			return GLFW_KEY_ESCAPE;
		case Key::K_ENTER:
			return GLFW_KEY_ENTER;
		case Key::K_TAB:
			return GLFW_KEY_TAB;
		case Key::K_BACKSPACE:
			return GLFW_KEY_BACKSPACE;
		case Key::K_INSERT:
			return GLFW_KEY_INSERT;
		case Key::K_DELETE:
			return GLFW_KEY_DELETE;
		case Key::K_RIGHT:
			return GLFW_KEY_RIGHT;
		case Key::K_LEFT:
			return GLFW_KEY_LEFT;
		case Key::K_DOWN:
			return GLFW_KEY_DOWN;
		case Key::K_UP:
			return GLFW_KEY_UP;
		case Key::K_PAGE_UP:
			return GLFW_KEY_PAGE_UP;
		case Key::K_PAGE_DOWN:
			return GLFW_KEY_PAGE_DOWN;
		case Key::K_HOME:
			return GLFW_KEY_HOME;
		case Key::K_END:
			return GLFW_KEY_END;
		case Key::K_CAPS_LOCK:
			return GLFW_KEY_CAPS_LOCK;
		case Key::K_SCROLL_LOCK:
			return GLFW_KEY_SCROLL_LOCK;
		case Key::K_NUM_LOCK:
			return GLFW_KEY_NUM_LOCK;
		case Key::K_PRINT_SCREEN:
			return GLFW_KEY_PRINT_SCREEN;
		case Key::K_PAUSE:
			return GLFW_KEY_PAUSE;
		case Key::K_F1:
			return GLFW_KEY_F1;
		case Key::K_F2:
			return GLFW_KEY_F2;
		case Key::K_F3:
			return GLFW_KEY_F3;
		case Key::K_F4:
			return GLFW_KEY_F4;
		case Key::K_F5:
			return GLFW_KEY_F5;
		case Key::K_F6:
			return GLFW_KEY_F6;
		case Key::K_F7:
			return GLFW_KEY_F7;
		case Key::K_F8:
			return GLFW_KEY_F8;
		case Key::K_F9:
			return GLFW_KEY_F9;
		case Key::K_F10:
			return GLFW_KEY_F10;
		case Key::K_F11:
			return GLFW_KEY_F11;
		case Key::K_F12:
			return GLFW_KEY_F12;
		case Key::K_F13:
			return GLFW_KEY_F13;
		case Key::K_F14:
			return GLFW_KEY_F14;
		case Key::K_F15:
			return GLFW_KEY_F15;
		case Key::K_F16:
			return GLFW_KEY_F16;
		case Key::K_F17:
			return GLFW_KEY_F17;
		case Key::K_F18:
			return GLFW_KEY_F18;
		case Key::K_F19:
			return GLFW_KEY_F19;
		case Key::K_F20:
			return GLFW_KEY_F20;
		case Key::K_F21:
			return GLFW_KEY_F21;
		case Key::K_F22:
			return GLFW_KEY_F22;
		case Key::K_F23:
			return GLFW_KEY_F23;
		case Key::K_F24:
			return GLFW_KEY_F24;
		case Key::K_F25:
			return GLFW_KEY_F25;
		case Key::K_KP_0:
			return GLFW_KEY_KP_0;
		case Key::K_KP_1:
			return GLFW_KEY_KP_1;
		case Key::K_KP_2:
			return GLFW_KEY_KP_2;
		case Key::K_KP_3:
			return GLFW_KEY_KP_3;
		case Key::K_KP_4:
			return GLFW_KEY_KP_4;
		case Key::K_KP_5:
			return GLFW_KEY_KP_5;
		case Key::K_KP_6:
			return GLFW_KEY_KP_6;
		case Key::K_KP_7:
			return GLFW_KEY_KP_7;
		case Key::K_KP_8:
			return GLFW_KEY_KP_8;
		case Key::K_KP_9:
			return GLFW_KEY_KP_9;
		case Key::K_KP_DECIMAL:
			return GLFW_KEY_KP_DECIMAL;
		case Key::K_KP_DIVIDE:
			return GLFW_KEY_KP_DIVIDE;
		case Key::K_KP_MULTIPLY:
			return GLFW_KEY_KP_MULTIPLY;
		case Key::K_KP_SUBTRACT:
			return GLFW_KEY_KP_SUBTRACT;
		case Key::K_KP_ADD:
			return GLFW_KEY_KP_ADD;
		case Key::K_KP_ENTER:
			return GLFW_KEY_KP_ENTER;
		case Key::K_KP_EQUAL:
			return GLFW_KEY_KP_EQUAL;
		case Key::K_LEFT_SHIFT:
			return GLFW_KEY_LEFT_SHIFT;
		case Key::K_LEFT_CONTROL:
			return GLFW_KEY_LEFT_CONTROL;
		case Key::K_LEFT_ALT:
			return GLFW_KEY_LEFT_ALT;
		case Key::K_LEFT_SUPER:
			return GLFW_KEY_LEFT_SUPER;
		case Key::K_RIGHT_SHIFT:
			return GLFW_KEY_RIGHT_SHIFT;
		case Key::K_RIGHT_CONTROL:
			return GLFW_KEY_RIGHT_CONTROL;
		case Key::K_RIGHT_ALT:
			return GLFW_KEY_RIGHT_ALT;
		case Key::K_RIGHT_SUPER:
			return GLFW_KEY_RIGHT_SUPER;
		case Key::K_MENU:
			return GLFW_KEY_MENU;
		}
		return GLFW_KEY_UNKNOWN;
	}

	unsigned int NativeTypeConverter::To(MouseButton btn)
	{
		switch (btn)
		{
		case MouseButton::MOFS_BUTTON0:
			return GLFW_MOUSE_BUTTON_1;
		case MouseButton::MOFS_BUTTON1:
			return GLFW_MOUSE_BUTTON_2;
		case MouseButton::MOFS_BUTTON2:
			return GLFW_MOUSE_BUTTON_3;
		case MouseButton::MOFS_BUTTON3:
			return GLFW_MOUSE_BUTTON_4;
		case MouseButton::MOFS_BUTTON4:
			return GLFW_MOUSE_BUTTON_5;
		case MouseButton::MOFS_BUTTON5:
			return GLFW_MOUSE_BUTTON_6;
		case MouseButton::MOFS_BUTTON6:
			return GLFW_MOUSE_BUTTON_7;
		case MouseButton::MOFS_BUTTON7:
			return GLFW_MOUSE_BUTTON_8;
		case MouseButton::MOFS_BUTTON_LEFT:
			return GLFW_MOUSE_BUTTON_LEFT;
		case MouseButton::MOFS_BUTTON_RIGHT:
			return GLFW_MOUSE_BUTTON_RIGHT;
		case MouseButton::MOFS_BUTTON_MIDDLE:
			return GLFW_MOUSE_BUTTON_MIDDLE;
		}
		return GLFW_KEY_UNKNOWN;
	}
}